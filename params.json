{"name":"tonic.js","tagline":"Your Own Personal Dashboard","body":"tonic.js\r\n=======\r\n\r\ntonic.js is a node.js framework to help build websites which contain near real-time data that is retrieved from third-party APIs. This makes it especially suited for making personal dashboards or personal websites with embedded data.\r\n\r\nAlmost any datasource can be used from within tonic.js as long as it is accessible from the computer running the tonic executable. Some example datasources are Fitbit data, Yelp reviews, Facebook or Foursquare checkins, Tumblr posts, and Goodreads history. If you can write some JavaScript to access it, you can use it!\r\n\r\ntonic.js works on OS X, Windows, and Linux.\r\n\r\nHow It Works\r\n------------\r\n\r\nWhy Static?\r\n-----------\r\n\r\nGetting Starting\r\n----------------\r\n\r\nBefore you get started, you must already have [node.js](http://nodejs.org/) installed.\r\n\r\n### Installing\r\n    $ npm install -g tonic\r\n\r\n### Creating a Website\r\n    $ tonic new MyTonicWebsite\r\n\r\nThis will create a skeleton website. The site contains a single job which will update the main page of the website every minute with a bad joke.\r\n\r\n### Running Your Website\r\n    $ tonic run MyTonicWebsite\r\n\r\nOnce tonic is running, you can open index.html within the site's public directory. This page will update once a minute as long as tonic is running.\r\n\r\nNote that whenever you run the tonic command, all jobs will immediately run even if they are only scheduled to run at a specific time of day.\r\n\r\nWebsite Folder Structure\r\n------------------------\r\n\r\nWriting Jobs\r\n------------\r\n\r\nWriting Tempates\r\n----------------\r\n\r\nDeployment\r\n----------\r\n\r\nYou can easily deploy the static pages generated by tonic to any webserer, however, it makes more sense to have your site automatically update. In order to do this, you need to have a server that supports node.js.\r\n\r\n### Deploying to your own server\r\n\r\nIf you have access to your own server where you can run processes, this is by far the easiest deployment method. Simply follow the same process as above and configure your webserver to serve static files from your site's public directory.\r\n\r\nIt is also probably a good idea to use something like [upstart](http://upstart.ubuntu.com/) or [forever](https://github.com/nodejitsu/forever).\r\n\r\n### Deploying to Heroku\r\n\r\nTODO\r\n\r\n### Deploying to Windows Azure\r\n\r\nTODO\r\n\r\n### Deploying Elsewhere\r\n\r\nProbably possible, feel free to update this with anything else that has worked for you.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}